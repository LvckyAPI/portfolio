stages:
  - test
  - deploy

include:
  - project: 'lvckyworld-docker/gitlab-ci-rezept'
    file:
      - '/deployment/.rsync.yml'
  - component: git.lvckyworld.dev/pipeline-components/node-package-manager/npm-install@~latest
    inputs:
      stage: test

Build Next.js:
  stage: test
  extends: .npm-install
  script:
    - npm install
    - npm run build
  artifacts:
    paths:
      - .next
    expire_in: 1 week
  only:
    - master
    - merge_requests
    - /^(deploy-dev-)\d{8}.\d{4}$/
    - /^(deploy-prod-)\d{8}.\d{4}$/

deploy:staging:
  extends: .deploy-rsync
  environment:
    name: 'staging'
    url: https://iven:schlenther@staging.schlenther.dev
  variables:
    SERVER: 'theta.lvckyworld.dev'
    SERVER_PORT: 22
    SERVER_USERNAME: 'deployer'
    SERVER_PATH: '/home/deployer/schlenther.dev/schlenther.dev-staging'
    MNTDIR: '/mnt/schlenther.dev/schlenther.dev-staging'
    RSYNC_OPTIONS: '--delete'
  before_script:
    - ls -la ${FOLDER_TO_SYNC}

    # remove docker .env default file
    - rm .env
    # copy .env file from GitLab CI-Settings
    - cp ${STAGING_ENV} ./.env

    # remove docker-compose.yml default file
    - rm docker-compose.yml
    # replace docker-compose.yml with docker-compose.staging.yml
    - cp docker-compose.staging.yml docker-compose.yml
  script:
    # deploy using rsync jobs script
    - !reference [.deploy-rsync, script]
    - |
      runssh() {
        echo "$@" | ssh -p $SERVER_PORT $SERVER_USERNAME@$SERVER "(cd $SERVER_PATH || true && export CURRENTDIR=${CURRENTDIR} && 
        export SERVER_PATH=${SERVER_PATH} && export CI_COMMIT_SHORT_SHA=${CI_COMMIT_SHORT_SHA} && bash -s)"
      }

    # list the files on the server
    - echo "FILES FROM SERVER"
    - runssh ls -lva

    # stop, remove, rebuild and start docker
    - runssh docker compose down
    - runssh docker compose up typescript -d --build --remove-orphans
  only:
    - /^(deploy-dev-)\d{8}.\d{4}$/

deploy:production:
  stage: deploy
  extends: deploy:staging
  environment:
    name: 'production'
    url: https://schlenther.dev
  variables:
    SERVER_PATH: '/home/deployer/schlenther.dev/schlenther.dev-production'
    MNTDIR: '/mnt/schlenther.dev/schlenther.dev-production'
  before_script:
    - ls -la ${FOLDER_TO_SYNC}

    # remove docker .env default file
    - rm .env
    # copy .env file from GitLab CI-Settings
    - cp ${PRODUCTION_ENV} ./.env

    # remove docker-compose.yml default file
    - rm docker-compose.yml

    # replace docker-compose.yml with docker-compose.production.yml
    - mv docker-compose.production.yml docker-compose.yml
  only:
    - /^(deploy-prod-)\d{8}.\d{4}$/
